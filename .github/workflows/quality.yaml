---
name: Quality

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  THRESHOLD-FILE: 0
  THRESHOLD-PACKAGE: 0
  THRESHOLD-TOTAL: 30

jobs:
  test:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version: '1.24.2'

      - name: Run make coverage
        id: coverage
        run: |
          eval ${{ env.CONFIG_TOKEN }}
          cd pkgs
          make coverage
          echo "total=$(tail -n 1 coverage.total)" >> $GITHUB_OUTPUT
          cd ..

      - name: Run go-test-coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: pkgs/coverage.out
          threshold-file: ${{ env.THRESHOLD-FILE }}
          threshold-package: ${{ env.THRESHOLD-PACKAGE }}
          threshold-total: ${{ env.THRESHOLD-TOTAL }}
          badge-file-name: pkgs-coverage.svg

      - name: Upload coverage report
#        if: github.event.pull_request.merged == true
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: pkgs/coverage.html

      - name: Checkout badge branch
#        if: github.event.pull_request.merged == true
        uses: actions/checkout@v4
        with:
          ref: badges

      - name: Update coverage badge
#        if: github.event.pull_request.merged == true
        run: |
          COVERAGE=${{ steps.coverage.outputs.total }}
          COLOR=green
          if (( ${COVERAGE%\.*} < 80 )); then COLOR=cyan; fi
          if (( ${COVERAGE%\.*} < 70 )); then COLOR=yellow; fi
          if (( ${COVERAGE%\.*} < 60 )); then COLOR=orange; fi
          if (( ${COVERAGE%\.*} < 50 )); then COLOR=red; fi
          echo "COVERAGE: $COVERAGE"
          echo "COLOR: $COLOR"

          if [ -f "pkgs-coverage.svg" ]; then
            echo "Arquivo pkgs-coverage.svg encontrado."
          else
            echo "Arquivo pkgs-coverage.svg nÃ£o encontrado."
            exit 1
          fi

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          curl "https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR" > coverage.svg
          git add coverage.svg
          git add pkgs-coverage.svg
          git commit -m "update coverage badge" || true
          git push origin badges