---
name: Quality

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  THRESHOLD-FILE: 0
  THRESHOLD-PACKAGE: 0
  THRESHOLD-TOTAL: 70

jobs:
  test:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: '1.24.2'

      - name: Identify modified directories
        id: changes
        run: |
          eval ${{ env.CONFIG_TOKEN }}
          MODIFIED_DIRS=$(git diff --name-only origin/main | cut -d'/' -f1 | sort -u)
          echo "MODIFIED_DIRS=$MODIFIED_DIRS" >> $GITHUB_ENV

      - name: Run coverage for onboarding-worker
        if: contains(env.MODIFIED_DIRS, 'onboarding-worker')
        run: |
          echo "Running coverage for onboarding-worker"
          cd onboarding-worker
          make coverage
          mv onboarding-worker/coverage.html onboarding-worker-coverage.html
          mv onboarding-worker/coverage.total onboarding-worker-coverage.total
          cd ..

      - name: Run coverage for pkgs
        if: contains(env.MODIFIED_DIRS, 'pkgs')
        run: |
          echo "Running coverage for pkgs"
          cd pkgs
          make coverage
          mv pkgs/coverage.html pkgs-coverage.html
          mv pkgs/coverage.total pkgs-coverage.total
          cd ..

      - name: Upload coverage reports to branch
        if: github.event.pull_request.merged == true
        run: |
          git fetch origin
          git checkout -b coverage-reports origin/coverage-reports || git checkout --orphan coverage-reports
          mkdir -p coverage
          mv onboarding-worker-coverage.html coverage/onboarding-worker-coverage.html
          mv pkgs-coverage.html coverage/pkgs-coverage.html
          git add coverage/
          git commit -m "Update coverage reports" || true
          git push origin coverage-reports

      - name: Update coverage badge to branch
        if: github.event.pull_request.merged == true
        run: |
          for project in onboarding-worker pkgs; do
            if [[ -f ${project}-coverage.out ]]; then
              COVERAGE=$(go tool cover -func=${project}-coverage.out | grep total: | grep -Eo '[0-9]+\.[0-9]+')
              COLOR=green
              if (( ${COVERAGE%\.*} < 80 )); then COLOR=cyan; fi
              if (( ${COVERAGE%\.*} < 70 )); then COLOR=yellow; fi
              if (( ${COVERAGE%\.*} < 60 )); then COLOR=orange; fi
              if (( ${COVERAGE%\.*} < 50 )); then COLOR=red; fi
              echo "COVERAGE for $project: $COVERAGE"
              echo "COLOR: $COLOR"

              curl "https://img.shields.io/badge/${project}_coverage-$COVERAGE%25-$COLOR" > ${project}-coverage.svg
              git add ${project}-coverage.svg
            fi
          done
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "update coverage badges" || true
          git push origin badge