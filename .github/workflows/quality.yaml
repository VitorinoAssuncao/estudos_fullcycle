---
name: Quality

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  THRESHOLD-FILE: 1
  THRESHOLD-PACKAGE: 1
  THRESHOLD-TOTAL: 10

jobs:
  identify-directories:
    name: Identifies affected directories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4

      - name: Identify modified directories
        id: changes
        run: |
          git fetch origin master
          eval ${{ env.CONFIG_TOKEN }}
          MODIFIED_DIRS=$(git diff --name-only origin/master | cut -d'/' -f1 | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "modified_dirs=$MODIFIED_DIRS" >> $GITHUB_OUTPUT
    outputs:
      modified_dirs: ${{ steps.changes.outputs.modified_dirs }}
  run-coverage:
    name: Run coverage and tests for Master Branch
    needs: identify-directories
    runs-on: ubuntu-latest
    if: contains(needs.identify-directories.outputs.modified_dirs, 'pkgs')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version: '1.24.2'

      - name: download artifact (main.breakdown)
        id: download-main-breakdown
        uses: dawidd6/action-download-artifact@v9
        with:
#          branch: master
#          workflow_conclusion: success
          name: main.breakdown
          if_no_artifact_found: fail

      - name: Run make coverage
        id: coverage
        run: |
          cd pkgs
          make coverage
          echo "total=$(tail -n 1 coverage.total)" >> $GITHUB_OUTPUT
          cd ..

      - name: Run go-test-coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: pkgs/coverage.out
          threshold-file: ${{ env.THRESHOLD-FILE }}
          threshold-package: ${{ env.THRESHOLD-PACKAGE }}
          threshold-total: ${{ env.THRESHOLD-TOTAL }}
          badge-file-name: pkgs-coverage.svg
#          breakdown-file-name: ${{ github.ref_name == 'master' && 'main.breakdown' || '' }}
          breakdown-file-name: 'main.breakdown'
          diff-base-breakdown-file-name: ${{ steps.download-main-breakdown.outputs.found_artifact == 'true' && 'main.breakdown' || '' }}
        continue-on-error: true

      - name: upload artifact (main.breakdown)
        uses: actions/upload-artifact@v4
        if: github.ref_name == 'master'
        with:
          name: main.breakdown
          path: main.breakdown
          if-no-files-found: error

      - name: check report
        run:
          echo "${{ steps.coverage.outputs.report }}"

      - name: post coverage report
        if: ${{ github.event.pull_request.merged != true }}
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: coverage-report
          pr-number: ${{ github.event.pull_request.number }}
          message: |
            go-test-coverage report:
            ```
            ${{ fromJSON(steps.coverage.outputs.report) }}```
          

      - name: Checkout badges Branch
        uses: actions/checkout@v4
        with:
          ref: badges
          clean: false

      - name: Update coverage badge
#        if: github.event.pull_request.merged == true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add pkgs-coverage.svg
          git commit -m "update coverage badge" || true
          git push origin badges