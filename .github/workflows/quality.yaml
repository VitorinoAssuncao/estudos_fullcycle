---
name: Quality

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  THRESHOLD-FILE: 0
  THRESHOLD-PACKAGE: 0
  THRESHOLD-TOTAL: 30

jobs:
  identify-directories:
    name: Identifies affected directories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4

      - name: Identify modified directories
        id: changes
        run: |
          git fetch origin master
          eval ${{ env.CONFIG_TOKEN }}
          MODIFIED_DIRS=$(git diff --name-only origin/master | cut -d'/' -f1 | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "modified_dirs=$MODIFIED_DIRS" >> $GITHUB_OUTPUT
    outputs:
      modified_dirs: ${{ steps.changes.outputs.modified_dirs }}
  run-coverage-actual:
    name: Run coverage and tests for actual Branch
    needs: identify-directories
    runs-on: ubuntu-latest
    if: contains(needs.identify-directories.outputs.modified_dirs, 'pkgs')
    steps:
      - name: Checkout badge branch
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version: '1.24.2'

      - name: Run make coverage
        id: coverage
        run: |
          cd pkgs
          make coverage
          echo "total=$(tail -n 1 coverage.total)" >> $GITHUB_OUTPUT
          cd ..

      - name: Run go-test-coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: pkgs/coverage.out
          threshold-file: ${{ env.THRESHOLD-FILE }}
          threshold-package: ${{ env.THRESHOLD-PACKAGE }}
          threshold-total: ${{ env.THRESHOLD-TOTAL }}
          badge-file-name: pkgs-${{ github.event.pull_request.number }}-coverage.svg


      - name: Update coverage badge
#        if: github.event.pull_request.merged == true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git stash
          git checkout badges
          git stash pop
          git add pkgs-${{ github.event.pull_request.number }}-coverage.svg
          git commit -m "update coverage badge" || true
          git push origin badges

  run-coverage-main:
    name: Run coverage and tests for Master Branch
    needs: identify-directories
    runs-on: ubuntu-latest
    if: contains(needs.identify-directories.outputs.modified_dirs, 'pkgs')
    steps:
      - name: Checkout badge branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version: '1.24.2'

      - name: Run make coverage
        id: coverage
        run: |
          cd pkgs
          make coverage
          echo "total=$(tail -n 1 coverage.total)" >> $GITHUB_OUTPUT
          cd ..

      - name: Run go-test-coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: pkgs/coverage.out
          threshold-file: ${{ env.THRESHOLD-FILE }}
          threshold-package: ${{ env.THRESHOLD-PACKAGE }}
          threshold-total: ${{ env.THRESHOLD-TOTAL }}
          badge-file-name: pkgs-coverage.svg

      - name: Update coverage badge
#        if: github.event.pull_request.merged == true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git stash
          git checkout badges
          git stash pop
          git add pkgs-coverage.svg
          git commit -m "update coverage badge" || true
          git push origin badges