---
name: Quality

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

env:
  CONFIG_TOKEN: git config --global url."https://${{ secrets.GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
  THRESHOLD-FILE: 0
  THRESHOLD-PACKAGE: 0
  THRESHOLD-TOTAL: 10
  DEFAULT_DIRS: "pkgs"

jobs:
  identify-directories:
    name: Identifies affected directories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4

      - name: Identify modified files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          base: 'main'
          filters: |
            pkgs:
              - 'pkgs/**'

      - name: Show value of previous step
        run: |
          echo "pkgs ${{ steps.changes.outputs.pkgs }}"

      - name: Set modified Directories
        id: set-changes
        run: |
          IFS=$'\n'
          dirsArray=(${DEFAULT_DIRS})
          MODIFIED_DIRS=""
          
          for dir in "${dirsArray[@]}"; do
          dirCommand="steps.changes.outputs.${dir}"
          if [ "${!dirCommand}" = "true" ]; then
          MODIFIED_DIRS="${MODIFIED_DIRS} ${dir}"
          fi
          done
          
          echo "modified_dirs=${MODIFIED_DIRS}" >> $GITHUB_OUTPUT
    outputs:
      modified_dirs: ${{ steps.changes.outputs.modified_dirs }}

  run-coverage:
    name: Run coverage and tests for ${{ matrix.feature }}
    needs: identify-directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: ['pkgs', 'onboarding-worker']
    continue-on-error: true
    steps:
      - name: Should Skip
        id: skip
        if: ${{ !contains(needs.identify-directories.outputs.modified_dirs, matrix.feature) }}
        run: |
          echo "Skipping jobs ${{ matrix.feature }} has not modified"
          echo "should_skip=true" >> $GITHUB_OUTPUT

      - name: Checkout
        if: steps.skip.outputs.should_skip != 'true'
        uses: actions/checkout@v4

      - name: Set up Go
        if: steps.skip.outputs.should_skip != 'true'
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version: '1.24.2'

      - name: download artifact (main.breakdown)
        if: steps.skip.outputs.should_skip != 'true'
        id: download-main-breakdown
        uses: dawidd6/action-download-artifact@v9
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          name: main-${{ matrix.feature }}.breakdown
          workflow: quality.yaml
          workflow_search: true
          search_artifacts: true
          if_no_artifact_found: fail
        continue-on-error: true

      - name: Run make coverage
        if: steps.skip.outputs.should_skip != 'true'
        id: coverage
        run: |
          cd ${{ matrix.feature }}
          eval ${{ env.CONFIG_TOKEN }}
          make coverage
          echo "total=$(tail -n 1 coverage.total)" >> $GITHUB_OUTPUT
          cd ..

      - name: Run go-test-coverage
        if: steps.skip.outputs.should_skip != 'true'
        id: test-coverage
        uses: vladopajic/go-test-coverage@v2
        env:
          BREAKDOWN_FILE_NAME: main-${{ matrix.feature }}.breakdown
        with:
          profile: ${{ matrix.feature }}/coverage.out
          git-token: ${{ github.event.pull_request.merged == true && secrets.GITHUB_TOKEN || '' }}
          git-branch: 'badge'
          git-file-name: '.badges/${{ matrix.feature }}-coverage.svg'
          threshold-file: ${{ env.THRESHOLD-FILE }}
          threshold-package: ${{ env.THRESHOLD-PACKAGE }}
          threshold-total: ${{ env.THRESHOLD-TOTAL }}
          breakdown-file-name: ${{ github.ref_name == 'main' && env.BREAKDOWN_FILE_NAME || '' }}
          diff-base-breakdown-file-name: ${{ steps.download-main-breakdown.outputs.found_artifact == 'true' && env.BREAKDOWN_FILE_NAME || '' }}
        continue-on-error: true

      - name: upload artifact
        uses: actions/upload-artifact@v4
        if: steps.skip.outputs.should_skip != 'true' &&  github.event.pull_request.merged == true
        with:
          name: main-${{ matrix.feature }}.breakdown
          path: main-${{ matrix.feature }}.breakdown
          if-no-files-found: error

      - name: post coverage report
        if: steps.skip.outputs.should_skip != 'true' &&  github.event.pull_request.merged != true
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: coverage-report
          pr-number: ${{ github.event.pull_request.number }}
          message: |
            go-test-coverage report:
            ```
            ${{ fromJSON(steps.test-coverage.outputs.report) }}```